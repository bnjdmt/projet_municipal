services:

  apache:
    build:
      context: ./
      dockerfile: apache.dockerfile
    ports:
      - 8080:80 # Le 1er port est celui de l'h√¥te
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mongo
      - php
    networks:
      - symfony

#  web:
#    image: nginx
#    volumes:
#      - ./templates:/etc/nginx/templates
#    ports:
#      - "8080:80"
#    environment:
#      - NGINX_HOST=foobar.com
#      - NGINX_PORT=80
#    depends_on:
#      - php

  php:
    build:
      context: ./water_management_back
      dockerfile: Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${UID:-1000}
    volumes:
      - ./src:/var/www/html
    networks:
      - symfony

  composer:
    build:
      context: ./
      dockerfile: composer.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${UID:-1000}
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    networks:
      - symfony

  mongo:
    image: mongo
    restart: always
    container_name: mongo-docker
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: mongoadmin
      #MONGODB_AUTH_DATABASE: admin
    ports:
      - "27017:27017"
    volumes:
      - ./workspace:/workspace
      - type: volume
        source: mongodb_data_volume
        target: /data/db

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "28081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: changeme
      #ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongoadmin
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongoadmin
      ME_CONFIG_MONGODB_URL: mongo://mongoadmin:mongoadmin@mongo:27017/
    depends_on:
      - mongo

networks:
  symfony:
    driver: bridge

volumes:
  mongodb_data_volume:
    driver: local